input {
	
	file {
	   path => "/home/param/git/webtech/elk/apache_*.log"
	   start_position => "beginning"
	   type => "access"
	}
	http {
	
		type => "access"
	}
}

filter {
	
	if [headers][request_path] =~ "error" or [path] =~ "errors"{

	    mutate {

	    	replace => {
	    		type => "error"
	    	}
	    }
	}else {

		mutate {

			replace => {
				type => "access"
			}
		}

		grok {
		    match => {
		    	"message" => "%{HTTPD_COMBINEDLOG}"
		    }
		}

		if "_grokparsefailure" in [tags] {

			drop{ }
		}

		mutate {

		   gsub => [
		   		"agent", '"', "",
		   		"referrer", '"', ""
		   ]

		   convert => {
		   		"response" => "integer"
		   		"bytes" => "integer"
		   }
		}

		date {

			match => ["timestamp", "dd/MMM/yyyy:HH:mm:ss Z"]
			remove_field => [ "timestamp"]
		}

		geoip {

			source => "clientip"
		}
	}

	

}

output {
	
	stdout {
	   codec => rubydebug
	}

	file {
		path => "%{type}_%{+yyyy_MM_dd}.log"
	}
}